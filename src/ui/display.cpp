#include "display.h"

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

static const unsigned char image_download_bits[] PROGMEM = {
  0x80,0x07,0x00,0xe0,0x1f,0x00,0xf8,0x7f,0x00,0x7c,0xf8,0x00,0x1c,0xe0,0x00,0x1e,
  0xe0,0x01,0x4e,0xc8,0x01,0xee,0xdc,0x01,0xe7,0x9f,0x03,0xe7,0x9f,0x03,0xe7,0x9f,
  0x03,0xc7,0x8f,0x03,0x87,0x87,0x03
};

static const unsigned char image_download_1_bits[] PROGMEM = {
  0xf8,0xff,0x3f,0x00,0x04,0x00,0x40,0x00,0x02,0x00,0x80,0x00,0x01,0x00,0x00,0x01,
  0x01,0x00,0x00,0x01,0x01,0x00,0x00,0x01,0x01,0x00,0x00,0x01,0x01,0x10,0x00,0x01,
  0x01,0x38,0x00,0x01,0x01,0x7c,0x00,0x01,0x01,0xfe,0x00,0x01,0x01,0xff,0x01,0x01,
  0x81,0xff,0x03,0x01,0xc1,0xff,0x07,0x01,0xe1,0xff,0x0f,0x01,0xf1,0xff,0x1f,0x01,
  0xf1,0xff,0x1f,0x01,0x01,0x00,0x00,0x01,0x01,0x00,0x00,0x01,0x01,0x00,0x00,0x01,
  0x01,0x00,0x00,0x01,0x01,0x00,0x00,0x01,0x01,0x00,0x00,0x01,0x03,0x00,0x80,0x01,
  0x06,0x00,0xc0,0x00,0xfc,0xff,0x7f,0x00,0xf8,0xff,0x3f,0x00
};

static const unsigned char image_download_1_flipped_bits[] PROGMEM = {
  0xf8,0xff,0x3f,0x00,0xfc,0xff,0x7f,0x00,0x06,0x00,0xc0,0x00,0x03,0x00,0x80,0x01,
  0x01,0x00,0x00,0x01,0x01,0x00,0x00,0x01,0x01,0x00,0x00,0x01,0x01,0x00,0x00,0x01,
  0x01,0x00,0x00,0x01,0x01,0x00,0x00,0x01,0xf1,0xff,0x1f,0x01,0xf1,0xff,0x1f,0x01,
  0xe1,0xff,0x0f,0x01,0xc1,0xff,0x07,0x01,0x81,0xff,0x03,0x01,0x01,0xff,0x01,0x01,
  0x01,0xfe,0x00,0x01,0x01,0x7c,0x00,0x01,0x01,0x38,0x00,0x01,0x01,0x10,0x00,0x01,
  0x01,0x00,0x00,0x01,0x01,0x00,0x00,0x01,0x01,0x00,0x00,0x01,0x01,0x00,0x00,0x01,
  0x02,0x00,0x80,0x00,0x04,0x00,0x40,0x00,0xf8,0xff,0x3f,0x00
};


void setupDisplay() {
  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(F("SSD1306 allocation failed"));
    while (1);
  }
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(SSD1306_WHITE);
  display.display();
}

void updateDisplay(int16_t leftSpeed, int16_t rightSpeed, uint8_t channel, bool isUpsideDown, uint8_t liionPercent, uint8_t lipoPercent, int lastSentPercent) {
  display.clearDisplay();
  
  display.setTextSize(1);
  display.setTextColor(WHITE);
  
  display.drawXBitmap(2, 2, image_download_bits, 18, 13, WHITE);
  
  display.setCursor(30, 4);
  display.print("Info screen:");

  char buf[20];
  
  display.setCursor(2, 20);
  sprintf(buf, "Channel: %d", channel);
  display.print(buf);

  display.setCursor(2, 28);
  sprintf(buf, "Move: L%d R%d", abs(leftSpeed), abs(rightSpeed));
  display.print(buf);

  display.setCursor(2, 36);
  sprintf(buf, "Weapon: %d", abs(lastSentPercent));
  display.print(buf);

  display.setCursor(2, 44);
  sprintf(buf, "Li-ion: %d", liionPercent);
  display.print(buf);

  display.setCursor(2, 52);
  sprintf(buf, "Lipo: %d", lipoPercent);
  display.print(buf);
  
  display.drawRect(0, 0, 128, 17, WHITE);
  display.drawLine(21, 0, 21, 15, WHITE);
  
  if (isUpsideDown) {
    display.drawXBitmap(100, 26, image_download_1_flipped_bits, 25, 27, WHITE);
  } else {
    display.drawXBitmap(100, 26, image_download_1_bits, 25, 27, WHITE);
  }

  display.display();
}

void updateDisplayMessage(const char* message) {
  display.clearDisplay();
  display.setCursor(30, 30);
  display.print(message);
  display.display();
}
